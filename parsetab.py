
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL COLON COMA CTEF CTEL DIFF DIVIDE ELSE EQUAL EXP FLOAT FOR FUNCTION ID IF INT LBRACKET LCURLY LESSTHAN LPAREN MINUS MORETHAN NOTEQUAL OR PLUS PRINT RBRACKET RCURLY RETURN RPAREN SEMICOLON START STRING TIMES VAR VOID WHILEprograma : START LPAREN RPAREN bloquedeclaracion : vars\n                   | epsilonvars : VAR var\n            | vars varsvar : vardef COLON tipo SEMICOLONvardef : ID\n              | vardef COMA vardeftipo : INT\n            | FLOAT\n            | BOOL\n            | STRINGlista : ID\n             | ID COMAarreglo : LBRACKET lista RBRACKET bloque : LCURLY declaracion estatutoExp RCURLYestatutoExp : estatuto SEMICOLON\n                    | estatutoExp estatutoExpestatuto : asignacion \n                | condicion\n                | whileLoop\n                | forLoop\n                | escritura\n                | funcion\n                | returnexpreturnexp : RETURN expresionasignacion : ID EQUAL expresionescritura : PRINT LPAREN escrito RPARENescrito : impr\n               | impr COMA imprimpr : STRING\n            | expresionexpresion : exp\n                | comparacion exp\n                | AND exp\n                | OR exp\n                | exp expresion\n                | arreglo comparacion : LESSTHAN\n                   | MORETHAN\n                   | NOTEQUALwhileLoop : WHILE LPAREN expresion RPAREN bloqueforLoop : FOR LPAREN vars expresion SEMICOLON expresion RPAREN bloquecondicion : IF LPAREN expresion RPAREN bloque condicionelsecondicionelse : ELSE bloque\n                     | epsilontiposreturn : tipo\n                    | VOIDfuncion : FUNCTION ID LPAREN argumentos RPAREN COLON tiposreturn bloqueargumentos : args\n                  | epsilonargs : ID COLON tipo\n            | args COMA argsexp : termino\n           | termino signosigno : PLUS\n             | MINUStermino : factor\n               | factor operacionoperacion : TIMES exp\n                 | DIVIDE exp\n                 | DIFF exp\n                 | EXP expfactor : LPAREN expresion RPAREN\n               | varcte\n               | signo varcteepsilon : varcte : ID \n              | CTEL\n              | CTEF'
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,5,32,],[0,-1,-16,]),'LPAREN':([2,21,22,23,24,26,27,28,34,35,36,38,39,41,42,43,44,46,48,49,50,52,53,54,55,56,57,58,59,65,75,76,79,80,81,82,83,95,102,103,104,105,106,107,110,],[3,35,36,37,38,53,-5,-4,53,53,53,53,70,53,53,53,53,-54,-39,-40,-41,-58,53,-65,-68,-69,-70,-56,-57,53,-55,-66,-59,53,53,53,53,53,-60,-61,-62,-63,-64,-6,53,]),'RPAREN':([3,41,45,46,52,54,55,56,57,58,59,63,64,66,67,68,69,70,71,72,73,74,75,76,79,84,86,87,88,89,97,98,99,100,102,103,104,105,106,111,118,119,121,],[4,-33,-38,-54,-58,-65,-68,-69,-70,-56,-57,91,92,94,-29,-31,-32,-67,-37,-34,-35,-36,-55,-66,-59,106,-9,-10,-11,-12,113,-50,-51,-15,-60,-61,-62,-63,-64,-30,123,-52,-53,]),'LCURLY':([4,86,87,88,89,91,92,116,123,124,125,126,],[6,-9,-10,-11,-12,6,6,6,6,6,-47,-48,]),'VAR':([6,8,27,28,37,65,107,],[10,10,10,-4,10,10,-6,]),'ID':([6,7,8,9,10,11,25,26,27,28,31,33,34,35,36,38,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,65,70,75,76,79,80,81,82,83,95,102,103,104,105,106,107,110,114,],[-67,20,-2,-3,30,20,39,55,-5,-4,20,-17,55,55,55,55,55,55,55,55,-54,55,-39,-40,-41,78,-58,55,-65,-68,-69,-70,-56,-57,30,55,96,-55,-66,-59,55,55,55,55,55,-60,-61,-62,-63,-64,-6,55,96,]),'IF':([6,7,8,9,11,27,28,31,33,107,],[-67,21,-2,-3,21,-5,-4,21,-17,-6,]),'WHILE':([6,7,8,9,11,27,28,31,33,107,],[-67,22,-2,-3,22,-5,-4,22,-17,-6,]),'FOR':([6,7,8,9,11,27,28,31,33,107,],[-67,23,-2,-3,23,-5,-4,23,-17,-6,]),'PRINT':([6,7,8,9,11,27,28,31,33,107,],[-67,24,-2,-3,24,-5,-4,24,-17,-6,]),'FUNCTION':([6,7,8,9,11,27,28,31,33,107,],[-67,25,-2,-3,25,-5,-4,25,-17,-6,]),'RETURN':([6,7,8,9,11,27,28,31,33,107,],[-67,26,-2,-3,26,-5,-4,26,-17,-6,]),'RCURLY':([11,31,33,],[32,-18,-17,]),'SEMICOLON':([12,13,14,15,16,17,18,19,32,40,41,45,46,52,54,55,56,57,58,59,62,71,72,73,74,75,76,79,85,86,87,88,89,93,94,100,102,103,104,105,106,108,109,115,117,122,127,128,],[33,-19,-20,-21,-22,-23,-24,-25,-16,-26,-33,-38,-54,-58,-65,-68,-69,-70,-56,-57,-27,-37,-34,-35,-36,-55,-66,-59,107,-9,-10,-11,-12,110,-28,-15,-60,-61,-62,-63,-64,-67,-42,-44,-46,-45,-43,-49,]),'EQUAL':([20,],[34,]),'AND':([26,27,28,34,35,36,38,41,46,52,53,54,55,56,57,58,59,65,75,76,79,95,102,103,104,105,106,107,110,],[43,-5,-4,43,43,43,43,43,-54,-58,43,-65,-68,-69,-70,-56,-57,43,-55,-66,-59,43,-60,-61,-62,-63,-64,-6,43,]),'OR':([26,27,28,34,35,36,38,41,46,52,53,54,55,56,57,58,59,65,75,76,79,95,102,103,104,105,106,107,110,],[44,-5,-4,44,44,44,44,44,-54,-58,44,-65,-68,-69,-70,-56,-57,44,-55,-66,-59,44,-60,-61,-62,-63,-64,-6,44,]),'LESSTHAN':([26,27,28,34,35,36,38,41,46,52,53,54,55,56,57,58,59,65,75,76,79,95,102,103,104,105,106,107,110,],[48,-5,-4,48,48,48,48,48,-54,-58,48,-65,-68,-69,-70,-56,-57,48,-55,-66,-59,48,-60,-61,-62,-63,-64,-6,48,]),'MORETHAN':([26,27,28,34,35,36,38,41,46,52,53,54,55,56,57,58,59,65,75,76,79,95,102,103,104,105,106,107,110,],[49,-5,-4,49,49,49,49,49,-54,-58,49,-65,-68,-69,-70,-56,-57,49,-55,-66,-59,49,-60,-61,-62,-63,-64,-6,49,]),'NOTEQUAL':([26,27,28,34,35,36,38,41,46,52,53,54,55,56,57,58,59,65,75,76,79,95,102,103,104,105,106,107,110,],[50,-5,-4,50,50,50,50,50,-54,-58,50,-65,-68,-69,-70,-56,-57,50,-55,-66,-59,50,-60,-61,-62,-63,-64,-6,50,]),'LBRACKET':([26,27,28,34,35,36,38,41,46,52,53,54,55,56,57,58,59,65,75,76,79,95,102,103,104,105,106,107,110,],[51,-5,-4,51,51,51,51,51,-54,-58,51,-65,-68,-69,-70,-56,-57,51,-55,-66,-59,51,-60,-61,-62,-63,-64,-6,51,]),'CTEL':([26,27,28,34,35,36,38,41,42,43,44,46,47,48,49,50,52,53,54,55,56,57,58,59,65,75,76,79,80,81,82,83,95,102,103,104,105,106,107,110,],[56,-5,-4,56,56,56,56,56,56,56,56,-54,56,-39,-40,-41,-58,56,-65,-68,-69,-70,-56,-57,56,-55,-66,-59,56,56,56,56,56,-60,-61,-62,-63,-64,-6,56,]),'CTEF':([26,27,28,34,35,36,38,41,42,43,44,46,47,48,49,50,52,53,54,55,56,57,58,59,65,75,76,79,80,81,82,83,95,102,103,104,105,106,107,110,],[57,-5,-4,57,57,57,57,57,57,57,57,-54,57,-39,-40,-41,-58,57,-65,-68,-69,-70,-56,-57,57,-55,-66,-59,57,57,57,57,57,-60,-61,-62,-63,-64,-6,57,]),'PLUS':([26,27,28,34,35,36,38,41,42,43,44,46,48,49,50,52,53,54,55,56,57,58,59,65,75,76,79,80,81,82,83,95,102,103,104,105,106,107,110,],[58,-5,-4,58,58,58,58,58,58,58,58,58,-39,-40,-41,-58,58,-65,-68,-69,-70,-56,-57,58,-55,-66,-59,58,58,58,58,58,-60,-61,-62,-63,-64,-6,58,]),'MINUS':([26,27,28,34,35,36,38,41,42,43,44,46,48,49,50,52,53,54,55,56,57,58,59,65,75,76,79,80,81,82,83,95,102,103,104,105,106,107,110,],[59,-5,-4,59,59,59,59,59,59,59,59,59,-39,-40,-41,-58,59,-65,-68,-69,-70,-56,-57,59,-55,-66,-59,59,59,59,59,59,-60,-61,-62,-63,-64,-6,59,]),'COLON':([29,30,90,96,113,],[60,-7,-8,112,120,]),'COMA':([29,30,41,45,46,52,54,55,56,57,58,59,67,68,69,71,72,73,74,75,76,78,79,86,87,88,89,90,98,100,102,103,104,105,106,119,121,],[61,-7,-33,-38,-54,-58,-65,-68,-69,-70,-56,-57,95,-31,-32,-37,-34,-35,-36,-55,-66,101,-59,-9,-10,-11,-12,61,114,-15,-60,-61,-62,-63,-64,-52,114,]),'ELSE':([32,108,],[-16,116,]),'STRING':([38,60,95,112,120,],[68,89,68,89,89,]),'TIMES':([52,54,55,56,57,76,106,],[80,-65,-68,-69,-70,-66,-64,]),'DIVIDE':([52,54,55,56,57,76,106,],[81,-65,-68,-69,-70,-66,-64,]),'DIFF':([52,54,55,56,57,76,106,],[82,-65,-68,-69,-70,-66,-64,]),'EXP':([52,54,55,56,57,76,106,],[83,-65,-68,-69,-70,-66,-64,]),'INT':([60,112,120,],[86,86,86,]),'FLOAT':([60,112,120,],[87,87,87,]),'BOOL':([60,112,120,],[88,88,88,]),'RBRACKET':([77,78,101,],[100,-13,-14,]),'VOID':([120,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloque':([4,91,92,116,123,124,],[5,108,109,122,127,128,]),'declaracion':([6,],[7,]),'vars':([6,8,27,37,65,],[8,27,27,65,27,]),'epsilon':([6,70,108,],[9,99,117,]),'estatutoExp':([7,11,31,],[11,31,31,]),'estatuto':([7,11,31,],[12,12,12,]),'asignacion':([7,11,31,],[13,13,13,]),'condicion':([7,11,31,],[14,14,14,]),'whileLoop':([7,11,31,],[15,15,15,]),'forLoop':([7,11,31,],[16,16,16,]),'escritura':([7,11,31,],[17,17,17,]),'funcion':([7,11,31,],[18,18,18,]),'returnexp':([7,11,31,],[19,19,19,]),'var':([10,],[28,]),'vardef':([10,61,],[29,90,]),'expresion':([26,34,35,36,38,41,53,65,95,110,],[40,62,63,64,69,71,84,93,69,118,]),'exp':([26,34,35,36,38,41,42,43,44,53,65,80,81,82,83,95,110,],[41,41,41,41,41,41,72,73,74,41,41,102,103,104,105,41,41,]),'comparacion':([26,34,35,36,38,41,53,65,95,110,],[42,42,42,42,42,42,42,42,42,42,]),'arreglo':([26,34,35,36,38,41,53,65,95,110,],[45,45,45,45,45,45,45,45,45,45,]),'termino':([26,34,35,36,38,41,42,43,44,53,65,80,81,82,83,95,110,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'signo':([26,34,35,36,38,41,42,43,44,46,53,65,80,81,82,83,95,110,],[47,47,47,47,47,47,47,47,47,75,47,47,47,47,47,47,47,47,]),'factor':([26,34,35,36,38,41,42,43,44,53,65,80,81,82,83,95,110,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'varcte':([26,34,35,36,38,41,42,43,44,47,53,65,80,81,82,83,95,110,],[54,54,54,54,54,54,54,54,54,76,54,54,54,54,54,54,54,54,]),'escrito':([38,],[66,]),'impr':([38,95,],[67,111,]),'lista':([51,],[77,]),'operacion':([52,],[79,]),'tipo':([60,112,120,],[85,119,125,]),'argumentos':([70,],[97,]),'args':([70,114,],[98,121,]),'condicionelse':([108,],[115,]),'tiposreturn':([120,],[124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> START LPAREN RPAREN bloque','programa',4,'p_programa','ply_yac_example.py',8),
  ('declaracion -> vars','declaracion',1,'p_declaracion','ply_yac_example.py',12),
  ('declaracion -> epsilon','declaracion',1,'p_declaracion','ply_yac_example.py',13),
  ('vars -> VAR var','vars',2,'p_vars','ply_yac_example.py',17),
  ('vars -> vars vars','vars',2,'p_vars','ply_yac_example.py',18),
  ('var -> vardef COLON tipo SEMICOLON','var',4,'p_var','ply_yac_example.py',22),
  ('vardef -> ID','vardef',1,'p_vardef','ply_yac_example.py',26),
  ('vardef -> vardef COMA vardef','vardef',3,'p_vardef','ply_yac_example.py',27),
  ('tipo -> INT','tipo',1,'p_tipo','ply_yac_example.py',31),
  ('tipo -> FLOAT','tipo',1,'p_tipo','ply_yac_example.py',32),
  ('tipo -> BOOL','tipo',1,'p_tipo','ply_yac_example.py',33),
  ('tipo -> STRING','tipo',1,'p_tipo','ply_yac_example.py',34),
  ('lista -> ID','lista',1,'p_lista','ply_yac_example.py',38),
  ('lista -> ID COMA','lista',2,'p_lista','ply_yac_example.py',39),
  ('arreglo -> LBRACKET lista RBRACKET','arreglo',3,'p_arreglo','ply_yac_example.py',43),
  ('bloque -> LCURLY declaracion estatutoExp RCURLY','bloque',4,'p_bloque','ply_yac_example.py',47),
  ('estatutoExp -> estatuto SEMICOLON','estatutoExp',2,'p_estatutoExp','ply_yac_example.py',51),
  ('estatutoExp -> estatutoExp estatutoExp','estatutoExp',2,'p_estatutoExp','ply_yac_example.py',52),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','ply_yac_example.py',56),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','ply_yac_example.py',57),
  ('estatuto -> whileLoop','estatuto',1,'p_estatuto','ply_yac_example.py',58),
  ('estatuto -> forLoop','estatuto',1,'p_estatuto','ply_yac_example.py',59),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','ply_yac_example.py',60),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','ply_yac_example.py',61),
  ('estatuto -> returnexp','estatuto',1,'p_estatuto','ply_yac_example.py',62),
  ('returnexp -> RETURN expresion','returnexp',2,'p_returnexp','ply_yac_example.py',66),
  ('asignacion -> ID EQUAL expresion','asignacion',3,'p_asignacion','ply_yac_example.py',70),
  ('escritura -> PRINT LPAREN escrito RPAREN','escritura',4,'p_escritura','ply_yac_example.py',74),
  ('escrito -> impr','escrito',1,'p_escrito','ply_yac_example.py',78),
  ('escrito -> impr COMA impr','escrito',3,'p_escrito','ply_yac_example.py',79),
  ('impr -> STRING','impr',1,'p_impr','ply_yac_example.py',83),
  ('impr -> expresion','impr',1,'p_impr','ply_yac_example.py',84),
  ('expresion -> exp','expresion',1,'p_expresion','ply_yac_example.py',88),
  ('expresion -> comparacion exp','expresion',2,'p_expresion','ply_yac_example.py',89),
  ('expresion -> AND exp','expresion',2,'p_expresion','ply_yac_example.py',90),
  ('expresion -> OR exp','expresion',2,'p_expresion','ply_yac_example.py',91),
  ('expresion -> exp expresion','expresion',2,'p_expresion','ply_yac_example.py',92),
  ('expresion -> arreglo','expresion',1,'p_expresion','ply_yac_example.py',93),
  ('comparacion -> LESSTHAN','comparacion',1,'p_comparacion','ply_yac_example.py',102),
  ('comparacion -> MORETHAN','comparacion',1,'p_comparacion','ply_yac_example.py',103),
  ('comparacion -> NOTEQUAL','comparacion',1,'p_comparacion','ply_yac_example.py',104),
  ('whileLoop -> WHILE LPAREN expresion RPAREN bloque','whileLoop',5,'p_whileLoop','ply_yac_example.py',108),
  ('forLoop -> FOR LPAREN vars expresion SEMICOLON expresion RPAREN bloque','forLoop',8,'p_forLoop','ply_yac_example.py',111),
  ('condicion -> IF LPAREN expresion RPAREN bloque condicionelse','condicion',6,'p_condicion','ply_yac_example.py',114),
  ('condicionelse -> ELSE bloque','condicionelse',2,'p_condicionelse','ply_yac_example.py',118),
  ('condicionelse -> epsilon','condicionelse',1,'p_condicionelse','ply_yac_example.py',119),
  ('tiposreturn -> tipo','tiposreturn',1,'p_tiposreturn','ply_yac_example.py',123),
  ('tiposreturn -> VOID','tiposreturn',1,'p_tiposreturn','ply_yac_example.py',124),
  ('funcion -> FUNCTION ID LPAREN argumentos RPAREN COLON tiposreturn bloque','funcion',8,'p_funcion','ply_yac_example.py',128),
  ('argumentos -> args','argumentos',1,'p_argumentos','ply_yac_example.py',132),
  ('argumentos -> epsilon','argumentos',1,'p_argumentos','ply_yac_example.py',133),
  ('args -> ID COLON tipo','args',3,'p_args','ply_yac_example.py',137),
  ('args -> args COMA args','args',3,'p_args','ply_yac_example.py',138),
  ('exp -> termino','exp',1,'p_exp','ply_yac_example.py',142),
  ('exp -> termino signo','exp',2,'p_exp','ply_yac_example.py',143),
  ('signo -> PLUS','signo',1,'p_signo','ply_yac_example.py',147),
  ('signo -> MINUS','signo',1,'p_signo','ply_yac_example.py',148),
  ('termino -> factor','termino',1,'p_termino','ply_yac_example.py',152),
  ('termino -> factor operacion','termino',2,'p_termino','ply_yac_example.py',153),
  ('operacion -> TIMES exp','operacion',2,'p_operacion','ply_yac_example.py',157),
  ('operacion -> DIVIDE exp','operacion',2,'p_operacion','ply_yac_example.py',158),
  ('operacion -> DIFF exp','operacion',2,'p_operacion','ply_yac_example.py',159),
  ('operacion -> EXP exp','operacion',2,'p_operacion','ply_yac_example.py',160),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','ply_yac_example.py',164),
  ('factor -> varcte','factor',1,'p_factor','ply_yac_example.py',165),
  ('factor -> signo varcte','factor',2,'p_factor','ply_yac_example.py',166),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','ply_yac_example.py',170),
  ('varcte -> ID','varcte',1,'p_varcte','ply_yac_example.py',174),
  ('varcte -> CTEL','varcte',1,'p_varcte','ply_yac_example.py',175),
  ('varcte -> CTEF','varcte',1,'p_varcte','ply_yac_example.py',176),
]
