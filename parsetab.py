
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL COLON COMA CTEF CTEL DIFF DIVIDE DO ELSE EQUAL EXP FLOAT FOR FUNCTION ID IF INT ISEQUAL LBRACKET LCURLY LESSTHAN LPAREN MINUS MORETHAN NOTEQUAL OR PLUS PRINT RBRACKET RCURLY RETURN RPAREN SEMICOLON START STRING TIMES VAR VOID WHILEprograma : START LPAREN RPAREN bloquedeclaracion : vars\n                   | epsilonvars : VAR var\n            | vars varsvar : vardef COLON tipo SEMICOLONvardef : IDtipo : INT\n            | FLOAT\n            | BOOL\n            | STRINGlista : ID\n             | ID COMAarreglo : LBRACKET lista RBRACKET bloque : LCURLY declaracion estatutoExp RCURLYestatutoExp : estatuto SEMICOLON\n                    | estatutoExp estatutoExpestatuto : asignacion \n                | condicion\n                | whileLoop\n                | doWhile\n                | forLoop\n                | escritura\n                | funcion\n                | returnexpreturnexp : RETURN expresionasignacion : ID EQUAL expresionescritura : PRINT LPAREN escrito RPARENescrito : impr\n               | impr COMA imprimpr : STRING\n            | expresionexpresion : exp\n                | condition\n                | arreglo condition : exp comparacion expresioncomparacion : LESSTHAN\n                   | MORETHAN\n                   | ISEQUAL\n                   | NOTEQUAL\n                   | AND\n                   | OR doWhile : do bloque WHILE LPAREN addCheckBool expresion RPARENdo : DOwhileLoop : WHILE startCondition addCheckBool expresion endCondition bloqueaddCheckBool : epsilonstartCondition : LPAREN\n                     |  SEMICOLONforLoop : FOR LPAREN argumentos startCondition expresion endCondition asignacion RPAREN bloquecondicion : IF LPAREN addCheckBool expresion endCondition bloque condicionelseendCondition : RPAREN\n                    | SEMICOLONcondicionelse : else bloque\n                     | epsilonelse : ELSEfuncion : FUNCTION funcdef LPAREN declaracion RPAREN COLON tiposreturn bloquefuncdef : IDtiposreturn : tipo\n                    | VOIDargumentos : args\n                  | epsilonargs : asignacion\n            | args COMA argsexp : termino\n           | termino signo expsigno : PLUS\n             | MINUStermino : factor\n               | factor operacion terminooperacion : TIMES\n                 | DIVIDE\n                 | DIFF\n                 | EXPfactor : paren expresion paren\n               | varcteparen : LPAREN\n            | RPARENepsilon : varcte : ID \n              | int\n              | float\n              | bool\n              | stringint : INTfloat : FLOATbool : BOOLstring : STRING'
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,5,35,],[0,-1,-15,]),'LPAREN':([2,22,23,25,26,28,37,38,39,40,41,43,44,45,46,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,107,108,111,113,114,115,117,118,124,126,],[3,38,40,43,44,56,56,-78,-78,-47,-48,-78,56,81,-57,-33,-34,-35,-64,-68,56,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-27,56,-46,56,107,40,-62,-60,-61,56,-37,-38,-39,-40,-41,-42,56,-66,-67,56,-70,-71,-72,-73,56,-78,56,56,-36,-65,-14,-69,-74,56,-63,]),'RPAREN':([3,8,9,28,30,31,37,38,39,40,41,44,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,99,105,106,107,108,111,112,113,114,115,117,118,119,124,125,127,131,139,],[4,-2,-3,57,-5,-4,57,-78,-78,-47,-48,57,-33,-34,-35,-64,-68,57,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-27,57,-46,57,110,-29,-31,-32,-78,57,-37,-38,-39,-40,-41,-42,57,-66,-67,57,-70,-71,-72,-73,57,121,121,-78,57,57,128,-36,-65,-14,-69,-74,-6,57,121,-30,138,144,]),'LCURLY':([4,24,29,101,102,103,104,120,121,122,123,135,137,140,141,142,144,],[6,6,-44,-8,-9,-10,-11,6,-51,-52,6,6,-55,6,-58,-59,6,]),'VAR':([6,8,30,31,81,119,],[10,10,10,-4,10,-6,]),'ID':([6,7,8,9,10,11,27,28,30,31,34,36,37,38,39,40,41,43,44,52,54,56,57,69,70,71,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,107,108,109,111,119,121,122,124,132,],[-78,21,-2,-3,33,21,46,58,-5,-4,21,-16,58,-78,-78,-47,-48,21,58,93,58,-76,-77,58,-46,58,58,-37,-38,-39,-40,-41,-42,58,-66,-67,58,-70,-71,-72,-73,-78,58,21,58,-6,-51,-52,58,21,]),'IF':([6,7,8,9,11,30,31,34,36,119,],[-78,22,-2,-3,22,-5,-4,22,-16,-6,]),'WHILE':([6,7,8,9,11,30,31,34,35,36,42,119,],[-78,23,-2,-3,23,-5,-4,23,-15,-16,72,-6,]),'FOR':([6,7,8,9,11,30,31,34,36,119,],[-78,25,-2,-3,25,-5,-4,25,-16,-6,]),'PRINT':([6,7,8,9,11,30,31,34,36,119,],[-78,26,-2,-3,26,-5,-4,26,-16,-6,]),'FUNCTION':([6,7,8,9,11,30,31,34,36,119,],[-78,27,-2,-3,27,-5,-4,27,-16,-6,]),'RETURN':([6,7,8,9,11,30,31,34,36,119,],[-78,28,-2,-3,28,-5,-4,28,-16,-6,]),'DO':([6,7,8,9,11,30,31,34,36,119,],[-78,29,-2,-3,29,-5,-4,29,-16,-6,]),'RCURLY':([11,34,36,],[35,-17,-16,]),'SEMICOLON':([12,13,14,15,16,17,18,19,20,23,35,43,47,48,49,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,68,73,74,75,76,100,101,102,103,104,105,106,110,113,114,115,117,118,125,126,129,130,134,136,138,143,145,146,],[36,-18,-19,-20,-21,-22,-23,-24,-25,41,-15,-78,-26,-33,-34,-35,-64,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-27,41,-62,-60,-61,119,-8,-9,-10,-11,122,122,-28,-36,-65,-14,-69,-74,122,-63,-78,-45,-50,-54,-43,-53,-56,-49,]),'EQUAL':([21,],[37,]),'LBRACKET':([28,37,38,39,40,41,44,54,56,57,69,70,71,82,83,84,85,86,87,88,107,108,111,124,],[52,52,-78,-78,-47,-48,52,52,-76,-77,52,-46,52,52,-37,-38,-39,-40,-41,-42,-78,52,52,52,]),'INT':([28,37,38,39,40,41,44,54,56,57,67,69,70,71,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,107,108,111,124,133,],[63,63,-78,-78,-47,-48,63,63,-76,-77,101,63,-46,63,63,-37,-38,-39,-40,-41,-42,63,-66,-67,63,-70,-71,-72,-73,-78,63,63,63,101,]),'FLOAT':([28,37,38,39,40,41,44,54,56,57,67,69,70,71,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,107,108,111,124,133,],[64,64,-78,-78,-47,-48,64,64,-76,-77,102,64,-46,64,64,-37,-38,-39,-40,-41,-42,64,-66,-67,64,-70,-71,-72,-73,-78,64,64,64,102,]),'BOOL':([28,37,38,39,40,41,44,54,56,57,67,69,70,71,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,107,108,111,124,133,],[65,65,-78,-78,-47,-48,65,65,-76,-77,103,65,-46,65,65,-37,-38,-39,-40,-41,-42,65,-66,-67,65,-70,-71,-72,-73,-78,65,65,65,103,]),'STRING':([28,37,38,39,40,41,44,54,56,57,67,69,70,71,82,83,84,85,86,87,88,89,90,91,94,95,96,97,98,107,108,111,124,133,],[66,66,-78,-78,-47,-48,79,66,-76,-77,104,66,-46,66,66,-37,-38,-39,-40,-41,-42,66,-66,-67,66,-70,-71,-72,-73,-78,66,79,66,104,]),'COLON':([32,33,128,],[67,-7,133,]),'ELSE':([35,129,],[-15,137,]),'COMA':([48,49,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,68,74,75,78,79,80,93,113,114,115,117,118,126,],[-33,-34,-35,-64,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-27,-62,109,111,-31,-32,116,-36,-65,-14,-69,-74,109,]),'LESSTHAN':([48,51,53,55,56,57,58,59,60,61,62,63,64,65,66,79,114,117,118,],[83,-64,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-65,-69,-74,]),'MORETHAN':([48,51,53,55,56,57,58,59,60,61,62,63,64,65,66,79,114,117,118,],[84,-64,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-65,-69,-74,]),'ISEQUAL':([48,51,53,55,56,57,58,59,60,61,62,63,64,65,66,79,114,117,118,],[85,-64,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-65,-69,-74,]),'NOTEQUAL':([48,51,53,55,56,57,58,59,60,61,62,63,64,65,66,79,114,117,118,],[86,-64,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-65,-69,-74,]),'AND':([48,51,53,55,56,57,58,59,60,61,62,63,64,65,66,79,114,117,118,],[87,-64,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-65,-69,-74,]),'OR':([48,51,53,55,56,57,58,59,60,61,62,63,64,65,66,79,114,117,118,],[88,-64,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-65,-69,-74,]),'PLUS':([51,53,55,56,57,58,59,60,61,62,63,64,65,66,79,117,118,],[90,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-69,-74,]),'MINUS':([51,53,55,56,57,58,59,60,61,62,63,64,65,66,79,117,118,],[91,-68,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-69,-74,]),'TIMES':([53,55,56,57,58,59,60,61,62,63,64,65,66,79,118,],[95,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-74,]),'DIVIDE':([53,55,56,57,58,59,60,61,62,63,64,65,66,79,118,],[96,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-74,]),'DIFF':([53,55,56,57,58,59,60,61,62,63,64,65,66,79,118,],[97,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-74,]),'EXP':([53,55,56,57,58,59,60,61,62,63,64,65,66,79,118,],[98,-75,-76,-77,-79,-80,-81,-82,-83,-84,-85,-86,-87,-87,-74,]),'RBRACKET':([92,93,116,],[115,-12,-13,]),'VOID':([133,],[142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloque':([4,24,120,123,135,140,144,],[5,42,129,130,143,145,146,]),'declaracion':([6,81,],[7,112,]),'vars':([6,8,30,81,],[8,30,30,8,]),'epsilon':([6,38,39,43,81,107,129,],[9,70,70,76,9,70,136,]),'estatutoExp':([7,11,34,],[11,34,34,]),'estatuto':([7,11,34,],[12,12,12,]),'asignacion':([7,11,34,43,109,132,],[13,13,13,74,74,139,]),'condicion':([7,11,34,],[14,14,14,]),'whileLoop':([7,11,34,],[15,15,15,]),'doWhile':([7,11,34,],[16,16,16,]),'forLoop':([7,11,34,],[17,17,17,]),'escritura':([7,11,34,],[18,18,18,]),'funcion':([7,11,34,],[19,19,19,]),'returnexp':([7,11,34,],[20,20,20,]),'do':([7,11,34,],[24,24,24,]),'var':([10,],[31,]),'vardef':([10,],[32,]),'startCondition':([23,73,],[39,108,]),'funcdef':([27,],[45,]),'expresion':([28,37,44,54,69,71,82,108,111,124,],[47,68,80,99,105,106,113,125,80,131,]),'exp':([28,37,44,54,69,71,82,89,108,111,124,],[48,48,48,48,48,48,48,114,48,48,48,]),'condition':([28,37,44,54,69,71,82,108,111,124,],[49,49,49,49,49,49,49,49,49,49,]),'arreglo':([28,37,44,54,69,71,82,108,111,124,],[50,50,50,50,50,50,50,50,50,50,]),'termino':([28,37,44,54,69,71,82,89,94,108,111,124,],[51,51,51,51,51,51,51,51,117,51,51,51,]),'factor':([28,37,44,54,69,71,82,89,94,108,111,124,],[53,53,53,53,53,53,53,53,53,53,53,53,]),'paren':([28,37,44,54,69,71,82,89,94,99,108,111,124,],[54,54,54,54,54,54,54,54,54,118,54,54,54,]),'varcte':([28,37,44,54,69,71,82,89,94,108,111,124,],[55,55,55,55,55,55,55,55,55,55,55,55,]),'int':([28,37,44,54,69,71,82,89,94,108,111,124,],[59,59,59,59,59,59,59,59,59,59,59,59,]),'float':([28,37,44,54,69,71,82,89,94,108,111,124,],[60,60,60,60,60,60,60,60,60,60,60,60,]),'bool':([28,37,44,54,69,71,82,89,94,108,111,124,],[61,61,61,61,61,61,61,61,61,61,61,61,]),'string':([28,37,44,54,69,71,82,89,94,108,111,124,],[62,62,62,62,62,62,62,62,62,62,62,62,]),'addCheckBool':([38,39,107,],[69,71,124,]),'argumentos':([43,],[73,]),'args':([43,109,],[75,126,]),'escrito':([44,],[77,]),'impr':([44,111,],[78,127,]),'comparacion':([48,],[82,]),'signo':([51,],[89,]),'lista':([52,],[92,]),'operacion':([53,],[94,]),'tipo':([67,133,],[100,141,]),'endCondition':([105,106,125,],[120,123,132,]),'condicionelse':([129,],[134,]),'else':([129,],[135,]),'tiposreturn':([133,],[140,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> START LPAREN RPAREN bloque','programa',4,'p_programa','ply_sintax.py',16),
  ('declaracion -> vars','declaracion',1,'p_declaracion','ply_sintax.py',22),
  ('declaracion -> epsilon','declaracion',1,'p_declaracion','ply_sintax.py',23),
  ('vars -> VAR var','vars',2,'p_vars','ply_sintax.py',27),
  ('vars -> vars vars','vars',2,'p_vars','ply_sintax.py',28),
  ('var -> vardef COLON tipo SEMICOLON','var',4,'p_var','ply_sintax.py',32),
  ('vardef -> ID','vardef',1,'p_vardef','ply_sintax.py',36),
  ('tipo -> INT','tipo',1,'p_tipo','ply_sintax.py',45),
  ('tipo -> FLOAT','tipo',1,'p_tipo','ply_sintax.py',46),
  ('tipo -> BOOL','tipo',1,'p_tipo','ply_sintax.py',47),
  ('tipo -> STRING','tipo',1,'p_tipo','ply_sintax.py',48),
  ('lista -> ID','lista',1,'p_lista','ply_sintax.py',55),
  ('lista -> ID COMA','lista',2,'p_lista','ply_sintax.py',56),
  ('arreglo -> LBRACKET lista RBRACKET','arreglo',3,'p_arreglo','ply_sintax.py',60),
  ('bloque -> LCURLY declaracion estatutoExp RCURLY','bloque',4,'p_bloque','ply_sintax.py',64),
  ('estatutoExp -> estatuto SEMICOLON','estatutoExp',2,'p_estatutoExp','ply_sintax.py',68),
  ('estatutoExp -> estatutoExp estatutoExp','estatutoExp',2,'p_estatutoExp','ply_sintax.py',69),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','ply_sintax.py',73),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','ply_sintax.py',74),
  ('estatuto -> whileLoop','estatuto',1,'p_estatuto','ply_sintax.py',75),
  ('estatuto -> doWhile','estatuto',1,'p_estatuto','ply_sintax.py',76),
  ('estatuto -> forLoop','estatuto',1,'p_estatuto','ply_sintax.py',77),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','ply_sintax.py',78),
  ('estatuto -> funcion','estatuto',1,'p_estatuto','ply_sintax.py',79),
  ('estatuto -> returnexp','estatuto',1,'p_estatuto','ply_sintax.py',80),
  ('returnexp -> RETURN expresion','returnexp',2,'p_returnexp','ply_sintax.py',84),
  ('asignacion -> ID EQUAL expresion','asignacion',3,'p_asignacion','ply_sintax.py',88),
  ('escritura -> PRINT LPAREN escrito RPAREN','escritura',4,'p_escritura','ply_sintax.py',98),
  ('escrito -> impr','escrito',1,'p_escrito','ply_sintax.py',102),
  ('escrito -> impr COMA impr','escrito',3,'p_escrito','ply_sintax.py',103),
  ('impr -> STRING','impr',1,'p_impr','ply_sintax.py',107),
  ('impr -> expresion','impr',1,'p_impr','ply_sintax.py',108),
  ('expresion -> exp','expresion',1,'p_expresion','ply_sintax.py',112),
  ('expresion -> condition','expresion',1,'p_expresion','ply_sintax.py',113),
  ('expresion -> arreglo','expresion',1,'p_expresion','ply_sintax.py',114),
  ('condition -> exp comparacion expresion','condition',3,'p_condition','ply_sintax.py',123),
  ('comparacion -> LESSTHAN','comparacion',1,'p_comparacion','ply_sintax.py',127),
  ('comparacion -> MORETHAN','comparacion',1,'p_comparacion','ply_sintax.py',128),
  ('comparacion -> ISEQUAL','comparacion',1,'p_comparacion','ply_sintax.py',129),
  ('comparacion -> NOTEQUAL','comparacion',1,'p_comparacion','ply_sintax.py',130),
  ('comparacion -> AND','comparacion',1,'p_comparacion','ply_sintax.py',131),
  ('comparacion -> OR','comparacion',1,'p_comparacion','ply_sintax.py',132),
  ('doWhile -> do bloque WHILE LPAREN addCheckBool expresion RPAREN','doWhile',7,'p_doWhile','ply_sintax.py',137),
  ('do -> DO','do',1,'p_do','ply_sintax.py',143),
  ('whileLoop -> WHILE startCondition addCheckBool expresion endCondition bloque','whileLoop',6,'p_whileLoop','ply_sintax.py',148),
  ('addCheckBool -> epsilon','addCheckBool',1,'p_addCheckBool','ply_sintax.py',154),
  ('startCondition -> LPAREN','startCondition',1,'p_startCondition','ply_sintax.py',159),
  ('startCondition -> SEMICOLON','startCondition',1,'p_startCondition','ply_sintax.py',160),
  ('forLoop -> FOR LPAREN argumentos startCondition expresion endCondition asignacion RPAREN bloque','forLoop',9,'p_forLoop','ply_sintax.py',165),
  ('condicion -> IF LPAREN addCheckBool expresion endCondition bloque condicionelse','condicion',7,'p_condicion','ply_sintax.py',171),
  ('endCondition -> RPAREN','endCondition',1,'p_endCondition','ply_sintax.py',175),
  ('endCondition -> SEMICOLON','endCondition',1,'p_endCondition','ply_sintax.py',176),
  ('condicionelse -> else bloque','condicionelse',2,'p_condicionelse','ply_sintax.py',181),
  ('condicionelse -> epsilon','condicionelse',1,'p_condicionelse','ply_sintax.py',182),
  ('else -> ELSE','else',1,'p_else','ply_sintax.py',187),
  ('funcion -> FUNCTION funcdef LPAREN declaracion RPAREN COLON tiposreturn bloque','funcion',8,'p_funcion','ply_sintax.py',193),
  ('funcdef -> ID','funcdef',1,'p_funcdef','ply_sintax.py',198),
  ('tiposreturn -> tipo','tiposreturn',1,'p_tiposreturn','ply_sintax.py',204),
  ('tiposreturn -> VOID','tiposreturn',1,'p_tiposreturn','ply_sintax.py',205),
  ('argumentos -> args','argumentos',1,'p_argumentos','ply_sintax.py',211),
  ('argumentos -> epsilon','argumentos',1,'p_argumentos','ply_sintax.py',212),
  ('args -> asignacion','args',1,'p_args','ply_sintax.py',216),
  ('args -> args COMA args','args',3,'p_args','ply_sintax.py',217),
  ('exp -> termino','exp',1,'p_exp','ply_sintax.py',221),
  ('exp -> termino signo exp','exp',3,'p_exp','ply_sintax.py',222),
  ('signo -> PLUS','signo',1,'p_signo','ply_sintax.py',227),
  ('signo -> MINUS','signo',1,'p_signo','ply_sintax.py',228),
  ('termino -> factor','termino',1,'p_termino','ply_sintax.py',234),
  ('termino -> factor operacion termino','termino',3,'p_termino','ply_sintax.py',235),
  ('operacion -> TIMES','operacion',1,'p_operacion','ply_sintax.py',241),
  ('operacion -> DIVIDE','operacion',1,'p_operacion','ply_sintax.py',242),
  ('operacion -> DIFF','operacion',1,'p_operacion','ply_sintax.py',243),
  ('operacion -> EXP','operacion',1,'p_operacion','ply_sintax.py',244),
  ('factor -> paren expresion paren','factor',3,'p_factor','ply_sintax.py',250),
  ('factor -> varcte','factor',1,'p_factor','ply_sintax.py',251),
  ('paren -> LPAREN','paren',1,'p_paren','ply_sintax.py',257),
  ('paren -> RPAREN','paren',1,'p_paren','ply_sintax.py',258),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','ply_sintax.py',271),
  ('varcte -> ID','varcte',1,'p_varcte','ply_sintax.py',275),
  ('varcte -> int','varcte',1,'p_varcte','ply_sintax.py',276),
  ('varcte -> float','varcte',1,'p_varcte','ply_sintax.py',277),
  ('varcte -> bool','varcte',1,'p_varcte','ply_sintax.py',278),
  ('varcte -> string','varcte',1,'p_varcte','ply_sintax.py',279),
  ('int -> INT','int',1,'p_int','ply_sintax.py',288),
  ('float -> FLOAT','float',1,'p_float','ply_sintax.py',294),
  ('bool -> BOOL','bool',1,'p_bool','ply_sintax.py',300),
  ('string -> STRING','string',1,'p_string','ply_sintax.py',306),
]
