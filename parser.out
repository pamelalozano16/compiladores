Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> START LPAREN RPAREN bloque
Rule 2     declaracion -> vars
Rule 3     declaracion -> epsilon
Rule 4     vars -> VAR var
Rule 5     vars -> vars vars
Rule 6     var -> vardef COLON tipo SEMICOLON
Rule 7     vardef -> ID
Rule 8     tipo -> INT
Rule 9     tipo -> FLOAT
Rule 10    tipo -> BOOL
Rule 11    tipo -> STRING
Rule 12    lista -> ID
Rule 13    lista -> ID COMA
Rule 14    arreglo -> LBRACKET lista RBRACKET
Rule 15    bloque -> LCURLY declaracion estatutoExp RCURLY
Rule 16    estatutoExp -> estatuto SEMICOLON
Rule 17    estatutoExp -> estatutoExp estatutoExp
Rule 18    estatuto -> asignacion
Rule 19    estatuto -> condicion
Rule 20    estatuto -> whileLoop
Rule 21    estatuto -> forLoop
Rule 22    estatuto -> escritura
Rule 23    estatuto -> funcion
Rule 24    estatuto -> returnexp
Rule 25    returnexp -> RETURN expresion
Rule 26    asignacion -> ID EQUAL expresion
Rule 27    escritura -> PRINT LPAREN escrito RPAREN
Rule 28    escrito -> impr
Rule 29    escrito -> impr COMA impr
Rule 30    impr -> STRING
Rule 31    impr -> expresion
Rule 32    expresion -> exp
Rule 33    expresion -> comparacion exp
Rule 34    expresion -> AND exp
Rule 35    expresion -> OR exp
Rule 36    expresion -> arreglo
Rule 37    comparacion -> LESSTHAN
Rule 38    comparacion -> MORETHAN
Rule 39    comparacion -> ISEQUAL
Rule 40    comparacion -> NOTEQUAL
Rule 41    whileLoop -> WHILE LPAREN expresion RPAREN bloque
Rule 42    forLoop -> FOR LPAREN argumentos expresion SEMICOLON expresion RPAREN bloque
Rule 43    condicion -> IF LPAREN expresion RPAREN bloque condicionelse
Rule 44    condicionelse -> ELSE bloque
Rule 45    condicionelse -> epsilon
Rule 46    funcion -> FUNCTION funcdef LPAREN argumentos RPAREN COLON tiposreturn bloque
Rule 47    funcdef -> ID
Rule 48    tiposreturn -> tipo
Rule 49    tiposreturn -> VOID
Rule 50    argumentos -> args
Rule 51    argumentos -> epsilon
Rule 52    args -> ID COLON tipo
Rule 53    args -> args COMA args
Rule 54    exp -> termino
Rule 55    exp -> termino signo exp
Rule 56    signo -> PLUS
Rule 57    signo -> MINUS
Rule 58    termino -> factor
Rule 59    termino -> factor operacion termino
Rule 60    operacion -> TIMES
Rule 61    operacion -> DIVIDE
Rule 62    operacion -> DIFF
Rule 63    operacion -> EXP
Rule 64    factor -> LPAREN expresion RPAREN
Rule 65    factor -> varcte
Rule 66    factor -> signo varcte
Rule 67    epsilon -> <empty>
Rule 68    varcte -> ID
Rule 69    varcte -> CTEL
Rule 70    varcte -> CTEF

Terminals, with rules where they appear

AND                  : 34
BOOL                 : 10
COLON                : 6 46 52
COMA                 : 13 29 53
CTEF                 : 70
CTEL                 : 69
DIFF                 : 62
DIVIDE               : 61
ELSE                 : 44
EQUAL                : 26
EXP                  : 63
FLOAT                : 9
FOR                  : 42
FUNCTION             : 46
ID                   : 7 12 13 26 47 52 68
IF                   : 43
INT                  : 8
ISEQUAL              : 39
LBRACKET             : 14
LCURLY               : 15
LESSTHAN             : 37
LPAREN               : 1 27 41 42 43 46 64
MINUS                : 57
MORETHAN             : 38
NOTEQUAL             : 40
OR                   : 35
PLUS                 : 56
PRINT                : 27
RBRACKET             : 14
RCURLY               : 15
RETURN               : 25
RPAREN               : 1 27 41 42 43 46 64
SEMICOLON            : 6 16 42
START                : 1
STRING               : 11 30
TIMES                : 60
VAR                  : 4
VOID                 : 49
WHILE                : 41
error                : 

Nonterminals, with rules where they appear

args                 : 50 53 53
argumentos           : 42 46
arreglo              : 36
asignacion           : 18
bloque               : 1 41 42 43 44 46
comparacion          : 33
condicion            : 19
condicionelse        : 43
declaracion          : 15
epsilon              : 3 45 51
escrito              : 27
escritura            : 22
estatuto             : 16
estatutoExp          : 15 17 17
exp                  : 32 33 34 35 55
expresion            : 25 26 31 41 42 42 43 64
factor               : 58 59
forLoop              : 21
funcdef              : 46
funcion              : 23
impr                 : 28 29 29
lista                : 14
operacion            : 59
programa             : 0
returnexp            : 24
signo                : 55 66
termino              : 54 55 59
tipo                 : 6 48 52
tiposreturn          : 46
var                  : 4
varcte               : 65 66
vardef               : 6
vars                 : 2 5 5
whileLoop            : 20

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . START LPAREN RPAREN bloque

    START           shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> START . LPAREN RPAREN bloque

    LPAREN          shift and go to state 3


state 3

    (1) programa -> START LPAREN . RPAREN bloque

    RPAREN          shift and go to state 4


state 4

    (1) programa -> START LPAREN RPAREN . bloque
    (15) bloque -> . LCURLY declaracion estatutoExp RCURLY

    LCURLY          shift and go to state 6

    bloque                         shift and go to state 5

state 5

    (1) programa -> START LPAREN RPAREN bloque .

    $end            reduce using rule 1 (programa -> START LPAREN RPAREN bloque .)


state 6

    (15) bloque -> LCURLY . declaracion estatutoExp RCURLY
    (2) declaracion -> . vars
    (3) declaracion -> . epsilon
    (4) vars -> . VAR var
    (5) vars -> . vars vars
    (67) epsilon -> .

    VAR             shift and go to state 10
    ID              reduce using rule 67 (epsilon -> .)
    IF              reduce using rule 67 (epsilon -> .)
    WHILE           reduce using rule 67 (epsilon -> .)
    FOR             reduce using rule 67 (epsilon -> .)
    PRINT           reduce using rule 67 (epsilon -> .)
    FUNCTION        reduce using rule 67 (epsilon -> .)
    RETURN          reduce using rule 67 (epsilon -> .)

    declaracion                    shift and go to state 7
    vars                           shift and go to state 8
    epsilon                        shift and go to state 9

state 7

    (15) bloque -> LCURLY declaracion . estatutoExp RCURLY
    (16) estatutoExp -> . estatuto SEMICOLON
    (17) estatutoExp -> . estatutoExp estatutoExp
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . whileLoop
    (21) estatuto -> . forLoop
    (22) estatuto -> . escritura
    (23) estatuto -> . funcion
    (24) estatuto -> . returnexp
    (26) asignacion -> . ID EQUAL expresion
    (43) condicion -> . IF LPAREN expresion RPAREN bloque condicionelse
    (41) whileLoop -> . WHILE LPAREN expresion RPAREN bloque
    (42) forLoop -> . FOR LPAREN argumentos expresion SEMICOLON expresion RPAREN bloque
    (27) escritura -> . PRINT LPAREN escrito RPAREN
    (46) funcion -> . FUNCTION funcdef LPAREN argumentos RPAREN COLON tiposreturn bloque
    (25) returnexp -> . RETURN expresion

    ID              shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    PRINT           shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26

    estatutoExp                    shift and go to state 11
    estatuto                       shift and go to state 12
    asignacion                     shift and go to state 13
    condicion                      shift and go to state 14
    whileLoop                      shift and go to state 15
    forLoop                        shift and go to state 16
    escritura                      shift and go to state 17
    funcion                        shift and go to state 18
    returnexp                      shift and go to state 19

state 8

    (2) declaracion -> vars .
    (5) vars -> vars . vars
    (4) vars -> . VAR var
    (5) vars -> . vars vars

    ID              reduce using rule 2 (declaracion -> vars .)
    IF              reduce using rule 2 (declaracion -> vars .)
    WHILE           reduce using rule 2 (declaracion -> vars .)
    FOR             reduce using rule 2 (declaracion -> vars .)
    PRINT           reduce using rule 2 (declaracion -> vars .)
    FUNCTION        reduce using rule 2 (declaracion -> vars .)
    RETURN          reduce using rule 2 (declaracion -> vars .)
    VAR             shift and go to state 10

    vars                           shift and go to state 27

state 9

    (3) declaracion -> epsilon .

    ID              reduce using rule 3 (declaracion -> epsilon .)
    IF              reduce using rule 3 (declaracion -> epsilon .)
    WHILE           reduce using rule 3 (declaracion -> epsilon .)
    FOR             reduce using rule 3 (declaracion -> epsilon .)
    PRINT           reduce using rule 3 (declaracion -> epsilon .)
    FUNCTION        reduce using rule 3 (declaracion -> epsilon .)
    RETURN          reduce using rule 3 (declaracion -> epsilon .)


state 10

    (4) vars -> VAR . var
    (6) var -> . vardef COLON tipo SEMICOLON
    (7) vardef -> . ID

    ID              shift and go to state 30

    var                            shift and go to state 28
    vardef                         shift and go to state 29

state 11

    (15) bloque -> LCURLY declaracion estatutoExp . RCURLY
    (17) estatutoExp -> estatutoExp . estatutoExp
    (16) estatutoExp -> . estatuto SEMICOLON
    (17) estatutoExp -> . estatutoExp estatutoExp
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . whileLoop
    (21) estatuto -> . forLoop
    (22) estatuto -> . escritura
    (23) estatuto -> . funcion
    (24) estatuto -> . returnexp
    (26) asignacion -> . ID EQUAL expresion
    (43) condicion -> . IF LPAREN expresion RPAREN bloque condicionelse
    (41) whileLoop -> . WHILE LPAREN expresion RPAREN bloque
    (42) forLoop -> . FOR LPAREN argumentos expresion SEMICOLON expresion RPAREN bloque
    (27) escritura -> . PRINT LPAREN escrito RPAREN
    (46) funcion -> . FUNCTION funcdef LPAREN argumentos RPAREN COLON tiposreturn bloque
    (25) returnexp -> . RETURN expresion

    RCURLY          shift and go to state 32
    ID              shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    PRINT           shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26

    estatutoExp                    shift and go to state 31
    estatuto                       shift and go to state 12
    asignacion                     shift and go to state 13
    condicion                      shift and go to state 14
    whileLoop                      shift and go to state 15
    forLoop                        shift and go to state 16
    escritura                      shift and go to state 17
    funcion                        shift and go to state 18
    returnexp                      shift and go to state 19

state 12

    (16) estatutoExp -> estatuto . SEMICOLON

    SEMICOLON       shift and go to state 33


state 13

    (18) estatuto -> asignacion .

    SEMICOLON       reduce using rule 18 (estatuto -> asignacion .)


state 14

    (19) estatuto -> condicion .

    SEMICOLON       reduce using rule 19 (estatuto -> condicion .)


state 15

    (20) estatuto -> whileLoop .

    SEMICOLON       reduce using rule 20 (estatuto -> whileLoop .)


state 16

    (21) estatuto -> forLoop .

    SEMICOLON       reduce using rule 21 (estatuto -> forLoop .)


state 17

    (22) estatuto -> escritura .

    SEMICOLON       reduce using rule 22 (estatuto -> escritura .)


state 18

    (23) estatuto -> funcion .

    SEMICOLON       reduce using rule 23 (estatuto -> funcion .)


state 19

    (24) estatuto -> returnexp .

    SEMICOLON       reduce using rule 24 (estatuto -> returnexp .)


state 20

    (26) asignacion -> ID . EQUAL expresion

    EQUAL           shift and go to state 34


state 21

    (43) condicion -> IF . LPAREN expresion RPAREN bloque condicionelse

    LPAREN          shift and go to state 35


state 22

    (41) whileLoop -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 36


state 23

    (42) forLoop -> FOR . LPAREN argumentos expresion SEMICOLON expresion RPAREN bloque

    LPAREN          shift and go to state 37


state 24

    (27) escritura -> PRINT . LPAREN escrito RPAREN

    LPAREN          shift and go to state 38


state 25

    (46) funcion -> FUNCTION . funcdef LPAREN argumentos RPAREN COLON tiposreturn bloque
    (47) funcdef -> . ID

    ID              shift and go to state 40

    funcdef                        shift and go to state 39

state 26

    (25) returnexp -> RETURN . expresion
    (32) expresion -> . exp
    (33) expresion -> . comparacion exp
    (34) expresion -> . AND exp
    (35) expresion -> . OR exp
    (36) expresion -> . arreglo
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (37) comparacion -> . LESSTHAN
    (38) comparacion -> . MORETHAN
    (39) comparacion -> . ISEQUAL
    (40) comparacion -> . NOTEQUAL
    (14) arreglo -> . LBRACKET lista RBRACKET
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    AND             shift and go to state 44
    OR              shift and go to state 45
    LESSTHAN        shift and go to state 49
    MORETHAN        shift and go to state 50
    ISEQUAL         shift and go to state 51
    NOTEQUAL        shift and go to state 52
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    expresion                      shift and go to state 41
    exp                            shift and go to state 42
    comparacion                    shift and go to state 43
    arreglo                        shift and go to state 46
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 27

    (5) vars -> vars vars .
    (5) vars -> vars . vars
    (4) vars -> . VAR var
    (5) vars -> . vars vars

  ! shift/reduce conflict for VAR resolved as shift
    ID              reduce using rule 5 (vars -> vars vars .)
    IF              reduce using rule 5 (vars -> vars vars .)
    WHILE           reduce using rule 5 (vars -> vars vars .)
    FOR             reduce using rule 5 (vars -> vars vars .)
    PRINT           reduce using rule 5 (vars -> vars vars .)
    FUNCTION        reduce using rule 5 (vars -> vars vars .)
    RETURN          reduce using rule 5 (vars -> vars vars .)
    VAR             shift and go to state 10

  ! VAR             [ reduce using rule 5 (vars -> vars vars .) ]

    vars                           shift and go to state 27

state 28

    (4) vars -> VAR var .

    VAR             reduce using rule 4 (vars -> VAR var .)
    ID              reduce using rule 4 (vars -> VAR var .)
    IF              reduce using rule 4 (vars -> VAR var .)
    WHILE           reduce using rule 4 (vars -> VAR var .)
    FOR             reduce using rule 4 (vars -> VAR var .)
    PRINT           reduce using rule 4 (vars -> VAR var .)
    FUNCTION        reduce using rule 4 (vars -> VAR var .)
    RETURN          reduce using rule 4 (vars -> VAR var .)


state 29

    (6) var -> vardef . COLON tipo SEMICOLON

    COLON           shift and go to state 62


state 30

    (7) vardef -> ID .

    COLON           reduce using rule 7 (vardef -> ID .)


state 31

    (17) estatutoExp -> estatutoExp estatutoExp .
    (17) estatutoExp -> estatutoExp . estatutoExp
    (16) estatutoExp -> . estatuto SEMICOLON
    (17) estatutoExp -> . estatutoExp estatutoExp
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . whileLoop
    (21) estatuto -> . forLoop
    (22) estatuto -> . escritura
    (23) estatuto -> . funcion
    (24) estatuto -> . returnexp
    (26) asignacion -> . ID EQUAL expresion
    (43) condicion -> . IF LPAREN expresion RPAREN bloque condicionelse
    (41) whileLoop -> . WHILE LPAREN expresion RPAREN bloque
    (42) forLoop -> . FOR LPAREN argumentos expresion SEMICOLON expresion RPAREN bloque
    (27) escritura -> . PRINT LPAREN escrito RPAREN
    (46) funcion -> . FUNCTION funcdef LPAREN argumentos RPAREN COLON tiposreturn bloque
    (25) returnexp -> . RETURN expresion

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RCURLY          reduce using rule 17 (estatutoExp -> estatutoExp estatutoExp .)
    ID              shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23
    PRINT           shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26

  ! ID              [ reduce using rule 17 (estatutoExp -> estatutoExp estatutoExp .) ]
  ! IF              [ reduce using rule 17 (estatutoExp -> estatutoExp estatutoExp .) ]
  ! WHILE           [ reduce using rule 17 (estatutoExp -> estatutoExp estatutoExp .) ]
  ! FOR             [ reduce using rule 17 (estatutoExp -> estatutoExp estatutoExp .) ]
  ! PRINT           [ reduce using rule 17 (estatutoExp -> estatutoExp estatutoExp .) ]
  ! FUNCTION        [ reduce using rule 17 (estatutoExp -> estatutoExp estatutoExp .) ]
  ! RETURN          [ reduce using rule 17 (estatutoExp -> estatutoExp estatutoExp .) ]

    estatutoExp                    shift and go to state 31
    estatuto                       shift and go to state 12
    asignacion                     shift and go to state 13
    condicion                      shift and go to state 14
    whileLoop                      shift and go to state 15
    forLoop                        shift and go to state 16
    escritura                      shift and go to state 17
    funcion                        shift and go to state 18
    returnexp                      shift and go to state 19

state 32

    (15) bloque -> LCURLY declaracion estatutoExp RCURLY .

    $end            reduce using rule 15 (bloque -> LCURLY declaracion estatutoExp RCURLY .)
    ELSE            reduce using rule 15 (bloque -> LCURLY declaracion estatutoExp RCURLY .)
    SEMICOLON       reduce using rule 15 (bloque -> LCURLY declaracion estatutoExp RCURLY .)


state 33

    (16) estatutoExp -> estatuto SEMICOLON .

    RCURLY          reduce using rule 16 (estatutoExp -> estatuto SEMICOLON .)
    ID              reduce using rule 16 (estatutoExp -> estatuto SEMICOLON .)
    IF              reduce using rule 16 (estatutoExp -> estatuto SEMICOLON .)
    WHILE           reduce using rule 16 (estatutoExp -> estatuto SEMICOLON .)
    FOR             reduce using rule 16 (estatutoExp -> estatuto SEMICOLON .)
    PRINT           reduce using rule 16 (estatutoExp -> estatuto SEMICOLON .)
    FUNCTION        reduce using rule 16 (estatutoExp -> estatuto SEMICOLON .)
    RETURN          reduce using rule 16 (estatutoExp -> estatuto SEMICOLON .)


state 34

    (26) asignacion -> ID EQUAL . expresion
    (32) expresion -> . exp
    (33) expresion -> . comparacion exp
    (34) expresion -> . AND exp
    (35) expresion -> . OR exp
    (36) expresion -> . arreglo
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (37) comparacion -> . LESSTHAN
    (38) comparacion -> . MORETHAN
    (39) comparacion -> . ISEQUAL
    (40) comparacion -> . NOTEQUAL
    (14) arreglo -> . LBRACKET lista RBRACKET
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    AND             shift and go to state 44
    OR              shift and go to state 45
    LESSTHAN        shift and go to state 49
    MORETHAN        shift and go to state 50
    ISEQUAL         shift and go to state 51
    NOTEQUAL        shift and go to state 52
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    expresion                      shift and go to state 63
    exp                            shift and go to state 42
    comparacion                    shift and go to state 43
    arreglo                        shift and go to state 46
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 35

    (43) condicion -> IF LPAREN . expresion RPAREN bloque condicionelse
    (32) expresion -> . exp
    (33) expresion -> . comparacion exp
    (34) expresion -> . AND exp
    (35) expresion -> . OR exp
    (36) expresion -> . arreglo
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (37) comparacion -> . LESSTHAN
    (38) comparacion -> . MORETHAN
    (39) comparacion -> . ISEQUAL
    (40) comparacion -> . NOTEQUAL
    (14) arreglo -> . LBRACKET lista RBRACKET
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    AND             shift and go to state 44
    OR              shift and go to state 45
    LESSTHAN        shift and go to state 49
    MORETHAN        shift and go to state 50
    ISEQUAL         shift and go to state 51
    NOTEQUAL        shift and go to state 52
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    expresion                      shift and go to state 64
    exp                            shift and go to state 42
    comparacion                    shift and go to state 43
    arreglo                        shift and go to state 46
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 36

    (41) whileLoop -> WHILE LPAREN . expresion RPAREN bloque
    (32) expresion -> . exp
    (33) expresion -> . comparacion exp
    (34) expresion -> . AND exp
    (35) expresion -> . OR exp
    (36) expresion -> . arreglo
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (37) comparacion -> . LESSTHAN
    (38) comparacion -> . MORETHAN
    (39) comparacion -> . ISEQUAL
    (40) comparacion -> . NOTEQUAL
    (14) arreglo -> . LBRACKET lista RBRACKET
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    AND             shift and go to state 44
    OR              shift and go to state 45
    LESSTHAN        shift and go to state 49
    MORETHAN        shift and go to state 50
    ISEQUAL         shift and go to state 51
    NOTEQUAL        shift and go to state 52
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    expresion                      shift and go to state 65
    exp                            shift and go to state 42
    comparacion                    shift and go to state 43
    arreglo                        shift and go to state 46
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 37

    (42) forLoop -> FOR LPAREN . argumentos expresion SEMICOLON expresion RPAREN bloque
    (50) argumentos -> . args
    (51) argumentos -> . epsilon
    (52) args -> . ID COLON tipo
    (53) args -> . args COMA args
    (67) epsilon -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 69
    AND             reduce using rule 67 (epsilon -> .)
    OR              reduce using rule 67 (epsilon -> .)
    LESSTHAN        reduce using rule 67 (epsilon -> .)
    MORETHAN        reduce using rule 67 (epsilon -> .)
    ISEQUAL         reduce using rule 67 (epsilon -> .)
    NOTEQUAL        reduce using rule 67 (epsilon -> .)
    LBRACKET        reduce using rule 67 (epsilon -> .)
    LPAREN          reduce using rule 67 (epsilon -> .)
    CTEL            reduce using rule 67 (epsilon -> .)
    CTEF            reduce using rule 67 (epsilon -> .)
    PLUS            reduce using rule 67 (epsilon -> .)
    MINUS           reduce using rule 67 (epsilon -> .)

  ! ID              [ reduce using rule 67 (epsilon -> .) ]

    argumentos                     shift and go to state 66
    args                           shift and go to state 67
    epsilon                        shift and go to state 68

state 38

    (27) escritura -> PRINT LPAREN . escrito RPAREN
    (28) escrito -> . impr
    (29) escrito -> . impr COMA impr
    (30) impr -> . STRING
    (31) impr -> . expresion
    (32) expresion -> . exp
    (33) expresion -> . comparacion exp
    (34) expresion -> . AND exp
    (35) expresion -> . OR exp
    (36) expresion -> . arreglo
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (37) comparacion -> . LESSTHAN
    (38) comparacion -> . MORETHAN
    (39) comparacion -> . ISEQUAL
    (40) comparacion -> . NOTEQUAL
    (14) arreglo -> . LBRACKET lista RBRACKET
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    STRING          shift and go to state 72
    AND             shift and go to state 44
    OR              shift and go to state 45
    LESSTHAN        shift and go to state 49
    MORETHAN        shift and go to state 50
    ISEQUAL         shift and go to state 51
    NOTEQUAL        shift and go to state 52
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    escrito                        shift and go to state 70
    impr                           shift and go to state 71
    expresion                      shift and go to state 73
    exp                            shift and go to state 42
    comparacion                    shift and go to state 43
    arreglo                        shift and go to state 46
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 39

    (46) funcion -> FUNCTION funcdef . LPAREN argumentos RPAREN COLON tiposreturn bloque

    LPAREN          shift and go to state 74


state 40

    (47) funcdef -> ID .

    LPAREN          reduce using rule 47 (funcdef -> ID .)


state 41

    (25) returnexp -> RETURN expresion .

    SEMICOLON       reduce using rule 25 (returnexp -> RETURN expresion .)


state 42

    (32) expresion -> exp .

    SEMICOLON       reduce using rule 32 (expresion -> exp .)
    RPAREN          reduce using rule 32 (expresion -> exp .)
    COMA            reduce using rule 32 (expresion -> exp .)


state 43

    (33) expresion -> comparacion . exp
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    exp                            shift and go to state 75
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 44

    (34) expresion -> AND . exp
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    exp                            shift and go to state 76
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 45

    (35) expresion -> OR . exp
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    exp                            shift and go to state 77
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 46

    (36) expresion -> arreglo .

    SEMICOLON       reduce using rule 36 (expresion -> arreglo .)
    RPAREN          reduce using rule 36 (expresion -> arreglo .)
    COMA            reduce using rule 36 (expresion -> arreglo .)


state 47

    (54) exp -> termino .
    (55) exp -> termino . signo exp
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    SEMICOLON       reduce using rule 54 (exp -> termino .)
    RPAREN          reduce using rule 54 (exp -> termino .)
    COMA            reduce using rule 54 (exp -> termino .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    signo                          shift and go to state 78

state 48

    (66) factor -> signo . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF

    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59

    varcte                         shift and go to state 79

state 49

    (37) comparacion -> LESSTHAN .

    LPAREN          reduce using rule 37 (comparacion -> LESSTHAN .)
    ID              reduce using rule 37 (comparacion -> LESSTHAN .)
    CTEL            reduce using rule 37 (comparacion -> LESSTHAN .)
    CTEF            reduce using rule 37 (comparacion -> LESSTHAN .)
    PLUS            reduce using rule 37 (comparacion -> LESSTHAN .)
    MINUS           reduce using rule 37 (comparacion -> LESSTHAN .)


state 50

    (38) comparacion -> MORETHAN .

    LPAREN          reduce using rule 38 (comparacion -> MORETHAN .)
    ID              reduce using rule 38 (comparacion -> MORETHAN .)
    CTEL            reduce using rule 38 (comparacion -> MORETHAN .)
    CTEF            reduce using rule 38 (comparacion -> MORETHAN .)
    PLUS            reduce using rule 38 (comparacion -> MORETHAN .)
    MINUS           reduce using rule 38 (comparacion -> MORETHAN .)


state 51

    (39) comparacion -> ISEQUAL .

    LPAREN          reduce using rule 39 (comparacion -> ISEQUAL .)
    ID              reduce using rule 39 (comparacion -> ISEQUAL .)
    CTEL            reduce using rule 39 (comparacion -> ISEQUAL .)
    CTEF            reduce using rule 39 (comparacion -> ISEQUAL .)
    PLUS            reduce using rule 39 (comparacion -> ISEQUAL .)
    MINUS           reduce using rule 39 (comparacion -> ISEQUAL .)


state 52

    (40) comparacion -> NOTEQUAL .

    LPAREN          reduce using rule 40 (comparacion -> NOTEQUAL .)
    ID              reduce using rule 40 (comparacion -> NOTEQUAL .)
    CTEL            reduce using rule 40 (comparacion -> NOTEQUAL .)
    CTEF            reduce using rule 40 (comparacion -> NOTEQUAL .)
    PLUS            reduce using rule 40 (comparacion -> NOTEQUAL .)
    MINUS           reduce using rule 40 (comparacion -> NOTEQUAL .)


state 53

    (14) arreglo -> LBRACKET . lista RBRACKET
    (12) lista -> . ID
    (13) lista -> . ID COMA

    ID              shift and go to state 81

    lista                          shift and go to state 80

state 54

    (58) termino -> factor .
    (59) termino -> factor . operacion termino
    (60) operacion -> . TIMES
    (61) operacion -> . DIVIDE
    (62) operacion -> . DIFF
    (63) operacion -> . EXP

    PLUS            reduce using rule 58 (termino -> factor .)
    MINUS           reduce using rule 58 (termino -> factor .)
    SEMICOLON       reduce using rule 58 (termino -> factor .)
    RPAREN          reduce using rule 58 (termino -> factor .)
    COMA            reduce using rule 58 (termino -> factor .)
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    DIFF            shift and go to state 85
    EXP             shift and go to state 86

    operacion                      shift and go to state 82

state 55

    (64) factor -> LPAREN . expresion RPAREN
    (32) expresion -> . exp
    (33) expresion -> . comparacion exp
    (34) expresion -> . AND exp
    (35) expresion -> . OR exp
    (36) expresion -> . arreglo
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (37) comparacion -> . LESSTHAN
    (38) comparacion -> . MORETHAN
    (39) comparacion -> . ISEQUAL
    (40) comparacion -> . NOTEQUAL
    (14) arreglo -> . LBRACKET lista RBRACKET
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    AND             shift and go to state 44
    OR              shift and go to state 45
    LESSTHAN        shift and go to state 49
    MORETHAN        shift and go to state 50
    ISEQUAL         shift and go to state 51
    NOTEQUAL        shift and go to state 52
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    expresion                      shift and go to state 87
    exp                            shift and go to state 42
    comparacion                    shift and go to state 43
    arreglo                        shift and go to state 46
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 56

    (65) factor -> varcte .

    TIMES           reduce using rule 65 (factor -> varcte .)
    DIVIDE          reduce using rule 65 (factor -> varcte .)
    DIFF            reduce using rule 65 (factor -> varcte .)
    EXP             reduce using rule 65 (factor -> varcte .)
    PLUS            reduce using rule 65 (factor -> varcte .)
    MINUS           reduce using rule 65 (factor -> varcte .)
    SEMICOLON       reduce using rule 65 (factor -> varcte .)
    RPAREN          reduce using rule 65 (factor -> varcte .)
    COMA            reduce using rule 65 (factor -> varcte .)


state 57

    (68) varcte -> ID .

    TIMES           reduce using rule 68 (varcte -> ID .)
    DIVIDE          reduce using rule 68 (varcte -> ID .)
    DIFF            reduce using rule 68 (varcte -> ID .)
    EXP             reduce using rule 68 (varcte -> ID .)
    PLUS            reduce using rule 68 (varcte -> ID .)
    MINUS           reduce using rule 68 (varcte -> ID .)
    SEMICOLON       reduce using rule 68 (varcte -> ID .)
    RPAREN          reduce using rule 68 (varcte -> ID .)
    COMA            reduce using rule 68 (varcte -> ID .)


state 58

    (69) varcte -> CTEL .

    TIMES           reduce using rule 69 (varcte -> CTEL .)
    DIVIDE          reduce using rule 69 (varcte -> CTEL .)
    DIFF            reduce using rule 69 (varcte -> CTEL .)
    EXP             reduce using rule 69 (varcte -> CTEL .)
    PLUS            reduce using rule 69 (varcte -> CTEL .)
    MINUS           reduce using rule 69 (varcte -> CTEL .)
    SEMICOLON       reduce using rule 69 (varcte -> CTEL .)
    RPAREN          reduce using rule 69 (varcte -> CTEL .)
    COMA            reduce using rule 69 (varcte -> CTEL .)


state 59

    (70) varcte -> CTEF .

    TIMES           reduce using rule 70 (varcte -> CTEF .)
    DIVIDE          reduce using rule 70 (varcte -> CTEF .)
    DIFF            reduce using rule 70 (varcte -> CTEF .)
    EXP             reduce using rule 70 (varcte -> CTEF .)
    PLUS            reduce using rule 70 (varcte -> CTEF .)
    MINUS           reduce using rule 70 (varcte -> CTEF .)
    SEMICOLON       reduce using rule 70 (varcte -> CTEF .)
    RPAREN          reduce using rule 70 (varcte -> CTEF .)
    COMA            reduce using rule 70 (varcte -> CTEF .)


state 60

    (56) signo -> PLUS .

    ID              reduce using rule 56 (signo -> PLUS .)
    CTEL            reduce using rule 56 (signo -> PLUS .)
    CTEF            reduce using rule 56 (signo -> PLUS .)
    LPAREN          reduce using rule 56 (signo -> PLUS .)
    PLUS            reduce using rule 56 (signo -> PLUS .)
    MINUS           reduce using rule 56 (signo -> PLUS .)


state 61

    (57) signo -> MINUS .

    ID              reduce using rule 57 (signo -> MINUS .)
    CTEL            reduce using rule 57 (signo -> MINUS .)
    CTEF            reduce using rule 57 (signo -> MINUS .)
    LPAREN          reduce using rule 57 (signo -> MINUS .)
    PLUS            reduce using rule 57 (signo -> MINUS .)
    MINUS           reduce using rule 57 (signo -> MINUS .)


state 62

    (6) var -> vardef COLON . tipo SEMICOLON
    (8) tipo -> . INT
    (9) tipo -> . FLOAT
    (10) tipo -> . BOOL
    (11) tipo -> . STRING

    INT             shift and go to state 89
    FLOAT           shift and go to state 90
    BOOL            shift and go to state 91
    STRING          shift and go to state 92

    tipo                           shift and go to state 88

state 63

    (26) asignacion -> ID EQUAL expresion .

    SEMICOLON       reduce using rule 26 (asignacion -> ID EQUAL expresion .)


state 64

    (43) condicion -> IF LPAREN expresion . RPAREN bloque condicionelse

    RPAREN          shift and go to state 93


state 65

    (41) whileLoop -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 94


state 66

    (42) forLoop -> FOR LPAREN argumentos . expresion SEMICOLON expresion RPAREN bloque
    (32) expresion -> . exp
    (33) expresion -> . comparacion exp
    (34) expresion -> . AND exp
    (35) expresion -> . OR exp
    (36) expresion -> . arreglo
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (37) comparacion -> . LESSTHAN
    (38) comparacion -> . MORETHAN
    (39) comparacion -> . ISEQUAL
    (40) comparacion -> . NOTEQUAL
    (14) arreglo -> . LBRACKET lista RBRACKET
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    AND             shift and go to state 44
    OR              shift and go to state 45
    LESSTHAN        shift and go to state 49
    MORETHAN        shift and go to state 50
    ISEQUAL         shift and go to state 51
    NOTEQUAL        shift and go to state 52
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    expresion                      shift and go to state 95
    exp                            shift and go to state 42
    comparacion                    shift and go to state 43
    arreglo                        shift and go to state 46
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 67

    (50) argumentos -> args .
    (53) args -> args . COMA args

    AND             reduce using rule 50 (argumentos -> args .)
    OR              reduce using rule 50 (argumentos -> args .)
    LESSTHAN        reduce using rule 50 (argumentos -> args .)
    MORETHAN        reduce using rule 50 (argumentos -> args .)
    ISEQUAL         reduce using rule 50 (argumentos -> args .)
    NOTEQUAL        reduce using rule 50 (argumentos -> args .)
    LBRACKET        reduce using rule 50 (argumentos -> args .)
    LPAREN          reduce using rule 50 (argumentos -> args .)
    ID              reduce using rule 50 (argumentos -> args .)
    CTEL            reduce using rule 50 (argumentos -> args .)
    CTEF            reduce using rule 50 (argumentos -> args .)
    PLUS            reduce using rule 50 (argumentos -> args .)
    MINUS           reduce using rule 50 (argumentos -> args .)
    RPAREN          reduce using rule 50 (argumentos -> args .)
    COMA            shift and go to state 96


state 68

    (51) argumentos -> epsilon .

    AND             reduce using rule 51 (argumentos -> epsilon .)
    OR              reduce using rule 51 (argumentos -> epsilon .)
    LESSTHAN        reduce using rule 51 (argumentos -> epsilon .)
    MORETHAN        reduce using rule 51 (argumentos -> epsilon .)
    ISEQUAL         reduce using rule 51 (argumentos -> epsilon .)
    NOTEQUAL        reduce using rule 51 (argumentos -> epsilon .)
    LBRACKET        reduce using rule 51 (argumentos -> epsilon .)
    LPAREN          reduce using rule 51 (argumentos -> epsilon .)
    ID              reduce using rule 51 (argumentos -> epsilon .)
    CTEL            reduce using rule 51 (argumentos -> epsilon .)
    CTEF            reduce using rule 51 (argumentos -> epsilon .)
    PLUS            reduce using rule 51 (argumentos -> epsilon .)
    MINUS           reduce using rule 51 (argumentos -> epsilon .)
    RPAREN          reduce using rule 51 (argumentos -> epsilon .)


state 69

    (52) args -> ID . COLON tipo

    COLON           shift and go to state 97


state 70

    (27) escritura -> PRINT LPAREN escrito . RPAREN

    RPAREN          shift and go to state 98


state 71

    (28) escrito -> impr .
    (29) escrito -> impr . COMA impr

    RPAREN          reduce using rule 28 (escrito -> impr .)
    COMA            shift and go to state 99


state 72

    (30) impr -> STRING .

    COMA            reduce using rule 30 (impr -> STRING .)
    RPAREN          reduce using rule 30 (impr -> STRING .)


state 73

    (31) impr -> expresion .

    COMA            reduce using rule 31 (impr -> expresion .)
    RPAREN          reduce using rule 31 (impr -> expresion .)


state 74

    (46) funcion -> FUNCTION funcdef LPAREN . argumentos RPAREN COLON tiposreturn bloque
    (50) argumentos -> . args
    (51) argumentos -> . epsilon
    (52) args -> . ID COLON tipo
    (53) args -> . args COMA args
    (67) epsilon -> .

    ID              shift and go to state 69
    RPAREN          reduce using rule 67 (epsilon -> .)

    argumentos                     shift and go to state 100
    args                           shift and go to state 67
    epsilon                        shift and go to state 68

state 75

    (33) expresion -> comparacion exp .

    SEMICOLON       reduce using rule 33 (expresion -> comparacion exp .)
    RPAREN          reduce using rule 33 (expresion -> comparacion exp .)
    COMA            reduce using rule 33 (expresion -> comparacion exp .)


state 76

    (34) expresion -> AND exp .

    SEMICOLON       reduce using rule 34 (expresion -> AND exp .)
    RPAREN          reduce using rule 34 (expresion -> AND exp .)
    COMA            reduce using rule 34 (expresion -> AND exp .)


state 77

    (35) expresion -> OR exp .

    SEMICOLON       reduce using rule 35 (expresion -> OR exp .)
    RPAREN          reduce using rule 35 (expresion -> OR exp .)
    COMA            reduce using rule 35 (expresion -> OR exp .)


state 78

    (55) exp -> termino signo . exp
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    termino                        shift and go to state 47
    signo                          shift and go to state 48
    exp                            shift and go to state 101
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 79

    (66) factor -> signo varcte .

    TIMES           reduce using rule 66 (factor -> signo varcte .)
    DIVIDE          reduce using rule 66 (factor -> signo varcte .)
    DIFF            reduce using rule 66 (factor -> signo varcte .)
    EXP             reduce using rule 66 (factor -> signo varcte .)
    PLUS            reduce using rule 66 (factor -> signo varcte .)
    MINUS           reduce using rule 66 (factor -> signo varcte .)
    SEMICOLON       reduce using rule 66 (factor -> signo varcte .)
    RPAREN          reduce using rule 66 (factor -> signo varcte .)
    COMA            reduce using rule 66 (factor -> signo varcte .)


state 80

    (14) arreglo -> LBRACKET lista . RBRACKET

    RBRACKET        shift and go to state 102


state 81

    (12) lista -> ID .
    (13) lista -> ID . COMA

    RBRACKET        reduce using rule 12 (lista -> ID .)
    COMA            shift and go to state 103


state 82

    (59) termino -> factor operacion . termino
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    factor                         shift and go to state 54
    termino                        shift and go to state 104
    varcte                         shift and go to state 56
    signo                          shift and go to state 48

state 83

    (60) operacion -> TIMES .

    LPAREN          reduce using rule 60 (operacion -> TIMES .)
    ID              reduce using rule 60 (operacion -> TIMES .)
    CTEL            reduce using rule 60 (operacion -> TIMES .)
    CTEF            reduce using rule 60 (operacion -> TIMES .)
    PLUS            reduce using rule 60 (operacion -> TIMES .)
    MINUS           reduce using rule 60 (operacion -> TIMES .)


state 84

    (61) operacion -> DIVIDE .

    LPAREN          reduce using rule 61 (operacion -> DIVIDE .)
    ID              reduce using rule 61 (operacion -> DIVIDE .)
    CTEL            reduce using rule 61 (operacion -> DIVIDE .)
    CTEF            reduce using rule 61 (operacion -> DIVIDE .)
    PLUS            reduce using rule 61 (operacion -> DIVIDE .)
    MINUS           reduce using rule 61 (operacion -> DIVIDE .)


state 85

    (62) operacion -> DIFF .

    LPAREN          reduce using rule 62 (operacion -> DIFF .)
    ID              reduce using rule 62 (operacion -> DIFF .)
    CTEL            reduce using rule 62 (operacion -> DIFF .)
    CTEF            reduce using rule 62 (operacion -> DIFF .)
    PLUS            reduce using rule 62 (operacion -> DIFF .)
    MINUS           reduce using rule 62 (operacion -> DIFF .)


state 86

    (63) operacion -> EXP .

    LPAREN          reduce using rule 63 (operacion -> EXP .)
    ID              reduce using rule 63 (operacion -> EXP .)
    CTEL            reduce using rule 63 (operacion -> EXP .)
    CTEF            reduce using rule 63 (operacion -> EXP .)
    PLUS            reduce using rule 63 (operacion -> EXP .)
    MINUS           reduce using rule 63 (operacion -> EXP .)


state 87

    (64) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 105


state 88

    (6) var -> vardef COLON tipo . SEMICOLON

    SEMICOLON       shift and go to state 106


state 89

    (8) tipo -> INT .

    SEMICOLON       reduce using rule 8 (tipo -> INT .)
    COMA            reduce using rule 8 (tipo -> INT .)
    AND             reduce using rule 8 (tipo -> INT .)
    OR              reduce using rule 8 (tipo -> INT .)
    LESSTHAN        reduce using rule 8 (tipo -> INT .)
    MORETHAN        reduce using rule 8 (tipo -> INT .)
    ISEQUAL         reduce using rule 8 (tipo -> INT .)
    NOTEQUAL        reduce using rule 8 (tipo -> INT .)
    LBRACKET        reduce using rule 8 (tipo -> INT .)
    LPAREN          reduce using rule 8 (tipo -> INT .)
    ID              reduce using rule 8 (tipo -> INT .)
    CTEL            reduce using rule 8 (tipo -> INT .)
    CTEF            reduce using rule 8 (tipo -> INT .)
    PLUS            reduce using rule 8 (tipo -> INT .)
    MINUS           reduce using rule 8 (tipo -> INT .)
    RPAREN          reduce using rule 8 (tipo -> INT .)
    LCURLY          reduce using rule 8 (tipo -> INT .)


state 90

    (9) tipo -> FLOAT .

    SEMICOLON       reduce using rule 9 (tipo -> FLOAT .)
    COMA            reduce using rule 9 (tipo -> FLOAT .)
    AND             reduce using rule 9 (tipo -> FLOAT .)
    OR              reduce using rule 9 (tipo -> FLOAT .)
    LESSTHAN        reduce using rule 9 (tipo -> FLOAT .)
    MORETHAN        reduce using rule 9 (tipo -> FLOAT .)
    ISEQUAL         reduce using rule 9 (tipo -> FLOAT .)
    NOTEQUAL        reduce using rule 9 (tipo -> FLOAT .)
    LBRACKET        reduce using rule 9 (tipo -> FLOAT .)
    LPAREN          reduce using rule 9 (tipo -> FLOAT .)
    ID              reduce using rule 9 (tipo -> FLOAT .)
    CTEL            reduce using rule 9 (tipo -> FLOAT .)
    CTEF            reduce using rule 9 (tipo -> FLOAT .)
    PLUS            reduce using rule 9 (tipo -> FLOAT .)
    MINUS           reduce using rule 9 (tipo -> FLOAT .)
    RPAREN          reduce using rule 9 (tipo -> FLOAT .)
    LCURLY          reduce using rule 9 (tipo -> FLOAT .)


state 91

    (10) tipo -> BOOL .

    SEMICOLON       reduce using rule 10 (tipo -> BOOL .)
    COMA            reduce using rule 10 (tipo -> BOOL .)
    AND             reduce using rule 10 (tipo -> BOOL .)
    OR              reduce using rule 10 (tipo -> BOOL .)
    LESSTHAN        reduce using rule 10 (tipo -> BOOL .)
    MORETHAN        reduce using rule 10 (tipo -> BOOL .)
    ISEQUAL         reduce using rule 10 (tipo -> BOOL .)
    NOTEQUAL        reduce using rule 10 (tipo -> BOOL .)
    LBRACKET        reduce using rule 10 (tipo -> BOOL .)
    LPAREN          reduce using rule 10 (tipo -> BOOL .)
    ID              reduce using rule 10 (tipo -> BOOL .)
    CTEL            reduce using rule 10 (tipo -> BOOL .)
    CTEF            reduce using rule 10 (tipo -> BOOL .)
    PLUS            reduce using rule 10 (tipo -> BOOL .)
    MINUS           reduce using rule 10 (tipo -> BOOL .)
    RPAREN          reduce using rule 10 (tipo -> BOOL .)
    LCURLY          reduce using rule 10 (tipo -> BOOL .)


state 92

    (11) tipo -> STRING .

    SEMICOLON       reduce using rule 11 (tipo -> STRING .)
    COMA            reduce using rule 11 (tipo -> STRING .)
    AND             reduce using rule 11 (tipo -> STRING .)
    OR              reduce using rule 11 (tipo -> STRING .)
    LESSTHAN        reduce using rule 11 (tipo -> STRING .)
    MORETHAN        reduce using rule 11 (tipo -> STRING .)
    ISEQUAL         reduce using rule 11 (tipo -> STRING .)
    NOTEQUAL        reduce using rule 11 (tipo -> STRING .)
    LBRACKET        reduce using rule 11 (tipo -> STRING .)
    LPAREN          reduce using rule 11 (tipo -> STRING .)
    ID              reduce using rule 11 (tipo -> STRING .)
    CTEL            reduce using rule 11 (tipo -> STRING .)
    CTEF            reduce using rule 11 (tipo -> STRING .)
    PLUS            reduce using rule 11 (tipo -> STRING .)
    MINUS           reduce using rule 11 (tipo -> STRING .)
    RPAREN          reduce using rule 11 (tipo -> STRING .)
    LCURLY          reduce using rule 11 (tipo -> STRING .)


state 93

    (43) condicion -> IF LPAREN expresion RPAREN . bloque condicionelse
    (15) bloque -> . LCURLY declaracion estatutoExp RCURLY

    LCURLY          shift and go to state 6

    bloque                         shift and go to state 107

state 94

    (41) whileLoop -> WHILE LPAREN expresion RPAREN . bloque
    (15) bloque -> . LCURLY declaracion estatutoExp RCURLY

    LCURLY          shift and go to state 6

    bloque                         shift and go to state 108

state 95

    (42) forLoop -> FOR LPAREN argumentos expresion . SEMICOLON expresion RPAREN bloque

    SEMICOLON       shift and go to state 109


state 96

    (53) args -> args COMA . args
    (52) args -> . ID COLON tipo
    (53) args -> . args COMA args

    ID              shift and go to state 69

    args                           shift and go to state 110

state 97

    (52) args -> ID COLON . tipo
    (8) tipo -> . INT
    (9) tipo -> . FLOAT
    (10) tipo -> . BOOL
    (11) tipo -> . STRING

    INT             shift and go to state 89
    FLOAT           shift and go to state 90
    BOOL            shift and go to state 91
    STRING          shift and go to state 92

    tipo                           shift and go to state 111

state 98

    (27) escritura -> PRINT LPAREN escrito RPAREN .

    SEMICOLON       reduce using rule 27 (escritura -> PRINT LPAREN escrito RPAREN .)


state 99

    (29) escrito -> impr COMA . impr
    (30) impr -> . STRING
    (31) impr -> . expresion
    (32) expresion -> . exp
    (33) expresion -> . comparacion exp
    (34) expresion -> . AND exp
    (35) expresion -> . OR exp
    (36) expresion -> . arreglo
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (37) comparacion -> . LESSTHAN
    (38) comparacion -> . MORETHAN
    (39) comparacion -> . ISEQUAL
    (40) comparacion -> . NOTEQUAL
    (14) arreglo -> . LBRACKET lista RBRACKET
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    STRING          shift and go to state 72
    AND             shift and go to state 44
    OR              shift and go to state 45
    LESSTHAN        shift and go to state 49
    MORETHAN        shift and go to state 50
    ISEQUAL         shift and go to state 51
    NOTEQUAL        shift and go to state 52
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    impr                           shift and go to state 112
    expresion                      shift and go to state 73
    exp                            shift and go to state 42
    comparacion                    shift and go to state 43
    arreglo                        shift and go to state 46
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 100

    (46) funcion -> FUNCTION funcdef LPAREN argumentos . RPAREN COLON tiposreturn bloque

    RPAREN          shift and go to state 113


state 101

    (55) exp -> termino signo exp .

    SEMICOLON       reduce using rule 55 (exp -> termino signo exp .)
    RPAREN          reduce using rule 55 (exp -> termino signo exp .)
    COMA            reduce using rule 55 (exp -> termino signo exp .)


state 102

    (14) arreglo -> LBRACKET lista RBRACKET .

    SEMICOLON       reduce using rule 14 (arreglo -> LBRACKET lista RBRACKET .)
    RPAREN          reduce using rule 14 (arreglo -> LBRACKET lista RBRACKET .)
    COMA            reduce using rule 14 (arreglo -> LBRACKET lista RBRACKET .)


state 103

    (13) lista -> ID COMA .

    RBRACKET        reduce using rule 13 (lista -> ID COMA .)


state 104

    (59) termino -> factor operacion termino .

    PLUS            reduce using rule 59 (termino -> factor operacion termino .)
    MINUS           reduce using rule 59 (termino -> factor operacion termino .)
    SEMICOLON       reduce using rule 59 (termino -> factor operacion termino .)
    RPAREN          reduce using rule 59 (termino -> factor operacion termino .)
    COMA            reduce using rule 59 (termino -> factor operacion termino .)


state 105

    (64) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 64 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 64 (factor -> LPAREN expresion RPAREN .)
    DIFF            reduce using rule 64 (factor -> LPAREN expresion RPAREN .)
    EXP             reduce using rule 64 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 64 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 64 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 64 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 64 (factor -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 64 (factor -> LPAREN expresion RPAREN .)


state 106

    (6) var -> vardef COLON tipo SEMICOLON .

    VAR             reduce using rule 6 (var -> vardef COLON tipo SEMICOLON .)
    ID              reduce using rule 6 (var -> vardef COLON tipo SEMICOLON .)
    IF              reduce using rule 6 (var -> vardef COLON tipo SEMICOLON .)
    WHILE           reduce using rule 6 (var -> vardef COLON tipo SEMICOLON .)
    FOR             reduce using rule 6 (var -> vardef COLON tipo SEMICOLON .)
    PRINT           reduce using rule 6 (var -> vardef COLON tipo SEMICOLON .)
    FUNCTION        reduce using rule 6 (var -> vardef COLON tipo SEMICOLON .)
    RETURN          reduce using rule 6 (var -> vardef COLON tipo SEMICOLON .)


state 107

    (43) condicion -> IF LPAREN expresion RPAREN bloque . condicionelse
    (44) condicionelse -> . ELSE bloque
    (45) condicionelse -> . epsilon
    (67) epsilon -> .

    ELSE            shift and go to state 115
    SEMICOLON       reduce using rule 67 (epsilon -> .)

    condicionelse                  shift and go to state 114
    epsilon                        shift and go to state 116

state 108

    (41) whileLoop -> WHILE LPAREN expresion RPAREN bloque .

    SEMICOLON       reduce using rule 41 (whileLoop -> WHILE LPAREN expresion RPAREN bloque .)


state 109

    (42) forLoop -> FOR LPAREN argumentos expresion SEMICOLON . expresion RPAREN bloque
    (32) expresion -> . exp
    (33) expresion -> . comparacion exp
    (34) expresion -> . AND exp
    (35) expresion -> . OR exp
    (36) expresion -> . arreglo
    (54) exp -> . termino
    (55) exp -> . termino signo exp
    (37) comparacion -> . LESSTHAN
    (38) comparacion -> . MORETHAN
    (39) comparacion -> . ISEQUAL
    (40) comparacion -> . NOTEQUAL
    (14) arreglo -> . LBRACKET lista RBRACKET
    (58) termino -> . factor
    (59) termino -> . factor operacion termino
    (64) factor -> . LPAREN expresion RPAREN
    (65) factor -> . varcte
    (66) factor -> . signo varcte
    (68) varcte -> . ID
    (69) varcte -> . CTEL
    (70) varcte -> . CTEF
    (56) signo -> . PLUS
    (57) signo -> . MINUS

    AND             shift and go to state 44
    OR              shift and go to state 45
    LESSTHAN        shift and go to state 49
    MORETHAN        shift and go to state 50
    ISEQUAL         shift and go to state 51
    NOTEQUAL        shift and go to state 52
    LBRACKET        shift and go to state 53
    LPAREN          shift and go to state 55
    ID              shift and go to state 57
    CTEL            shift and go to state 58
    CTEF            shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

    expresion                      shift and go to state 117
    exp                            shift and go to state 42
    comparacion                    shift and go to state 43
    arreglo                        shift and go to state 46
    termino                        shift and go to state 47
    signo                          shift and go to state 48
    factor                         shift and go to state 54
    varcte                         shift and go to state 56

state 110

    (53) args -> args COMA args .
    (53) args -> args . COMA args

  ! shift/reduce conflict for COMA resolved as shift
    AND             reduce using rule 53 (args -> args COMA args .)
    OR              reduce using rule 53 (args -> args COMA args .)
    LESSTHAN        reduce using rule 53 (args -> args COMA args .)
    MORETHAN        reduce using rule 53 (args -> args COMA args .)
    ISEQUAL         reduce using rule 53 (args -> args COMA args .)
    NOTEQUAL        reduce using rule 53 (args -> args COMA args .)
    LBRACKET        reduce using rule 53 (args -> args COMA args .)
    LPAREN          reduce using rule 53 (args -> args COMA args .)
    ID              reduce using rule 53 (args -> args COMA args .)
    CTEL            reduce using rule 53 (args -> args COMA args .)
    CTEF            reduce using rule 53 (args -> args COMA args .)
    PLUS            reduce using rule 53 (args -> args COMA args .)
    MINUS           reduce using rule 53 (args -> args COMA args .)
    RPAREN          reduce using rule 53 (args -> args COMA args .)
    COMA            shift and go to state 96

  ! COMA            [ reduce using rule 53 (args -> args COMA args .) ]


state 111

    (52) args -> ID COLON tipo .

    COMA            reduce using rule 52 (args -> ID COLON tipo .)
    AND             reduce using rule 52 (args -> ID COLON tipo .)
    OR              reduce using rule 52 (args -> ID COLON tipo .)
    LESSTHAN        reduce using rule 52 (args -> ID COLON tipo .)
    MORETHAN        reduce using rule 52 (args -> ID COLON tipo .)
    ISEQUAL         reduce using rule 52 (args -> ID COLON tipo .)
    NOTEQUAL        reduce using rule 52 (args -> ID COLON tipo .)
    LBRACKET        reduce using rule 52 (args -> ID COLON tipo .)
    LPAREN          reduce using rule 52 (args -> ID COLON tipo .)
    ID              reduce using rule 52 (args -> ID COLON tipo .)
    CTEL            reduce using rule 52 (args -> ID COLON tipo .)
    CTEF            reduce using rule 52 (args -> ID COLON tipo .)
    PLUS            reduce using rule 52 (args -> ID COLON tipo .)
    MINUS           reduce using rule 52 (args -> ID COLON tipo .)
    RPAREN          reduce using rule 52 (args -> ID COLON tipo .)


state 112

    (29) escrito -> impr COMA impr .

    RPAREN          reduce using rule 29 (escrito -> impr COMA impr .)


state 113

    (46) funcion -> FUNCTION funcdef LPAREN argumentos RPAREN . COLON tiposreturn bloque

    COLON           shift and go to state 118


state 114

    (43) condicion -> IF LPAREN expresion RPAREN bloque condicionelse .

    SEMICOLON       reduce using rule 43 (condicion -> IF LPAREN expresion RPAREN bloque condicionelse .)


state 115

    (44) condicionelse -> ELSE . bloque
    (15) bloque -> . LCURLY declaracion estatutoExp RCURLY

    LCURLY          shift and go to state 6

    bloque                         shift and go to state 119

state 116

    (45) condicionelse -> epsilon .

    SEMICOLON       reduce using rule 45 (condicionelse -> epsilon .)


state 117

    (42) forLoop -> FOR LPAREN argumentos expresion SEMICOLON expresion . RPAREN bloque

    RPAREN          shift and go to state 120


state 118

    (46) funcion -> FUNCTION funcdef LPAREN argumentos RPAREN COLON . tiposreturn bloque
    (48) tiposreturn -> . tipo
    (49) tiposreturn -> . VOID
    (8) tipo -> . INT
    (9) tipo -> . FLOAT
    (10) tipo -> . BOOL
    (11) tipo -> . STRING

    VOID            shift and go to state 123
    INT             shift and go to state 89
    FLOAT           shift and go to state 90
    BOOL            shift and go to state 91
    STRING          shift and go to state 92

    tiposreturn                    shift and go to state 121
    tipo                           shift and go to state 122

state 119

    (44) condicionelse -> ELSE bloque .

    SEMICOLON       reduce using rule 44 (condicionelse -> ELSE bloque .)


state 120

    (42) forLoop -> FOR LPAREN argumentos expresion SEMICOLON expresion RPAREN . bloque
    (15) bloque -> . LCURLY declaracion estatutoExp RCURLY

    LCURLY          shift and go to state 6

    bloque                         shift and go to state 124

state 121

    (46) funcion -> FUNCTION funcdef LPAREN argumentos RPAREN COLON tiposreturn . bloque
    (15) bloque -> . LCURLY declaracion estatutoExp RCURLY

    LCURLY          shift and go to state 6

    bloque                         shift and go to state 125

state 122

    (48) tiposreturn -> tipo .

    LCURLY          reduce using rule 48 (tiposreturn -> tipo .)


state 123

    (49) tiposreturn -> VOID .

    LCURLY          reduce using rule 49 (tiposreturn -> VOID .)


state 124

    (42) forLoop -> FOR LPAREN argumentos expresion SEMICOLON expresion RPAREN bloque .

    SEMICOLON       reduce using rule 42 (forLoop -> FOR LPAREN argumentos expresion SEMICOLON expresion RPAREN bloque .)


state 125

    (46) funcion -> FUNCTION funcdef LPAREN argumentos RPAREN COLON tiposreturn bloque .

    SEMICOLON       reduce using rule 46 (funcion -> FUNCTION funcdef LPAREN argumentos RPAREN COLON tiposreturn bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for IF in state 31 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 31 resolved as shift
WARNING: shift/reduce conflict for FOR in state 31 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 31 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 31 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 37 resolved as shift
WARNING: shift/reduce conflict for COMA in state 110 resolved as shift
